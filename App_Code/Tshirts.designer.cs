#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="tshirts")]
public partial class TshirtsDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertclient(client instance);
  partial void Updateclient(client instance);
  partial void Deleteclient(client instance);
  partial void Inserttshirt(tshirt instance);
  partial void Updatetshirt(tshirt instance);
  partial void Deletetshirt(tshirt instance);
  partial void Insertitem(item instance);
  partial void Updateitem(item instance);
  partial void Deleteitem(item instance);
  partial void InsertsellOrder(sellOrder instance);
  partial void UpdatesellOrder(sellOrder instance);
  partial void DeletesellOrder(sellOrder instance);
  #endregion
	
	public TshirtsDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["tshirtsConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public TshirtsDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public TshirtsDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public TshirtsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public TshirtsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<client> clients
	{
		get
		{
			return this.GetTable<client>();
		}
	}
	
	public System.Data.Linq.Table<tshirt> tshirts
	{
		get
		{
			return this.GetTable<tshirt>();
		}
	}
	
	public System.Data.Linq.Table<item> items
	{
		get
		{
			return this.GetTable<item>();
		}
	}
	
	public System.Data.Linq.Table<sellOrder> sellOrders
	{
		get
		{
			return this.GetTable<sellOrder>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.client")]
public partial class client : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _email;
	
	private string _password;
	
	private bool _is_admin;
	
	private EntitySet<sellOrder> _sellOrders;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onis_adminChanging(bool value);
    partial void Onis_adminChanged();
    #endregion
	
	public client()
	{
		this._sellOrders = new EntitySet<sellOrder>(new Action<sellOrder>(this.attach_sellOrders), new Action<sellOrder>(this.detach_sellOrders));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255)")]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(255)")]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this.OnpasswordChanging(value);
				this.SendPropertyChanging();
				this._password = value;
				this.SendPropertyChanged("password");
				this.OnpasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_admin", DbType="Bit NOT NULL")]
	public bool is_admin
	{
		get
		{
			return this._is_admin;
		}
		set
		{
			if ((this._is_admin != value))
			{
				this.Onis_adminChanging(value);
				this.SendPropertyChanging();
				this._is_admin = value;
				this.SendPropertyChanged("is_admin");
				this.Onis_adminChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_sellOrder", Storage="_sellOrders", ThisKey="id", OtherKey="client_id")]
	public EntitySet<sellOrder> sellOrders
	{
		get
		{
			return this._sellOrders;
		}
		set
		{
			this._sellOrders.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_sellOrders(sellOrder entity)
	{
		this.SendPropertyChanging();
		entity.client = this;
	}
	
	private void detach_sellOrders(sellOrder entity)
	{
		this.SendPropertyChanging();
		entity.client = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tshirt")]
public partial class tshirt : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private System.Nullable<System.DateTime> _expire_time;
	
	private string _name;
	
	private string _description;
	
	private System.Nullable<decimal> _price;
	
	private string _imagen;
	
	private EntitySet<item> _items;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onexpire_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onexpire_timeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OnimagenChanging(string value);
    partial void OnimagenChanged();
    #endregion
	
	public tshirt()
	{
		this._items = new EntitySet<item>(new Action<item>(this.attach_items), new Action<item>(this.detach_items));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expire_time", DbType="DateTime")]
	public System.Nullable<System.DateTime> expire_time
	{
		get
		{
			return this._expire_time;
		}
		set
		{
			if ((this._expire_time != value))
			{
				this.Onexpire_timeChanging(value);
				this.SendPropertyChanging();
				this._expire_time = value;
				this.SendPropertyChanged("expire_time");
				this.Onexpire_timeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(255)")]
	public string description
	{
		get
		{
			return this._description;
		}
		set
		{
			if ((this._description != value))
			{
				this.OndescriptionChanging(value);
				this.SendPropertyChanging();
				this._description = value;
				this.SendPropertyChanged("description");
				this.OndescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> price
	{
		get
		{
			return this._price;
		}
		set
		{
			if ((this._price != value))
			{
				this.OnpriceChanging(value);
				this.SendPropertyChanging();
				this._price = value;
				this.SendPropertyChanged("price");
				this.OnpriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagen", DbType="VarChar(255)")]
	public string imagen
	{
		get
		{
			return this._imagen;
		}
		set
		{
			if ((this._imagen != value))
			{
				this.OnimagenChanging(value);
				this.SendPropertyChanging();
				this._imagen = value;
				this.SendPropertyChanged("imagen");
				this.OnimagenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tshirt_item", Storage="_items", ThisKey="id", OtherKey="tshirt_id")]
	public EntitySet<item> items
	{
		get
		{
			return this._items;
		}
		set
		{
			this._items.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_items(item entity)
	{
		this.SendPropertyChanging();
		entity.tshirt = this;
	}
	
	private void detach_items(item entity)
	{
		this.SendPropertyChanging();
		entity.tshirt = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.item")]
public partial class item : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private int _tshirt_id;
	
	private System.Nullable<int> _quantity;
	
	private int _sellOrder_id;
	
	private string _size;
	
	private string _genre;
	
	private EntityRef<tshirt> _tshirt;
	
	private EntityRef<sellOrder> _sellOrder;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ontshirt_idChanging(int value);
    partial void Ontshirt_idChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnsellOrder_idChanging(int value);
    partial void OnsellOrder_idChanged();
    partial void OnsizeChanging(string value);
    partial void OnsizeChanged();
    partial void OngenreChanging(string value);
    partial void OngenreChanged();
    #endregion
	
	public item()
	{
		this._tshirt = default(EntityRef<tshirt>);
		this._sellOrder = default(EntityRef<sellOrder>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tshirt_id", DbType="Int NOT NULL")]
	public int tshirt_id
	{
		get
		{
			return this._tshirt_id;
		}
		set
		{
			if ((this._tshirt_id != value))
			{
				if (this._tshirt.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Ontshirt_idChanging(value);
				this.SendPropertyChanging();
				this._tshirt_id = value;
				this.SendPropertyChanged("tshirt_id");
				this.Ontshirt_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
	public System.Nullable<int> quantity
	{
		get
		{
			return this._quantity;
		}
		set
		{
			if ((this._quantity != value))
			{
				this.OnquantityChanging(value);
				this.SendPropertyChanging();
				this._quantity = value;
				this.SendPropertyChanged("quantity");
				this.OnquantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sellOrder_id", DbType="Int NOT NULL")]
	public int sellOrder_id
	{
		get
		{
			return this._sellOrder_id;
		}
		set
		{
			if ((this._sellOrder_id != value))
			{
				if (this._sellOrder.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnsellOrder_idChanging(value);
				this.SendPropertyChanging();
				this._sellOrder_id = value;
				this.SendPropertyChanged("sellOrder_id");
				this.OnsellOrder_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="VarChar(255)")]
	public string size
	{
		get
		{
			return this._size;
		}
		set
		{
			if ((this._size != value))
			{
				this.OnsizeChanging(value);
				this.SendPropertyChanging();
				this._size = value;
				this.SendPropertyChanged("size");
				this.OnsizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre", DbType="VarChar(255)")]
	public string genre
	{
		get
		{
			return this._genre;
		}
		set
		{
			if ((this._genre != value))
			{
				this.OngenreChanging(value);
				this.SendPropertyChanging();
				this._genre = value;
				this.SendPropertyChanged("genre");
				this.OngenreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tshirt_item", Storage="_tshirt", ThisKey="tshirt_id", OtherKey="id", IsForeignKey=true)]
	public tshirt tshirt
	{
		get
		{
			return this._tshirt.Entity;
		}
		set
		{
			tshirt previousValue = this._tshirt.Entity;
			if (((previousValue != value) 
						|| (this._tshirt.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tshirt.Entity = null;
					previousValue.items.Remove(this);
				}
				this._tshirt.Entity = value;
				if ((value != null))
				{
					value.items.Add(this);
					this._tshirt_id = value.id;
				}
				else
				{
					this._tshirt_id = default(int);
				}
				this.SendPropertyChanged("tshirt");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sellOrder_item", Storage="_sellOrder", ThisKey="sellOrder_id", OtherKey="id", IsForeignKey=true)]
	public sellOrder sellOrder
	{
		get
		{
			return this._sellOrder.Entity;
		}
		set
		{
			sellOrder previousValue = this._sellOrder.Entity;
			if (((previousValue != value) 
						|| (this._sellOrder.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._sellOrder.Entity = null;
					previousValue.items.Remove(this);
				}
				this._sellOrder.Entity = value;
				if ((value != null))
				{
					value.items.Add(this);
					this._sellOrder_id = value.id;
				}
				else
				{
					this._sellOrder_id = default(int);
				}
				this.SendPropertyChanged("sellOrder");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sellOrder")]
public partial class sellOrder : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private System.Nullable<int> _client_id;
	
	private System.Nullable<System.DateTime> _ordered_at;
	
	private System.Nullable<decimal> _total;
	
	private string _shipping_address;
	
	private string _billing_address;
	
	private EntitySet<item> _items;
	
	private EntityRef<client> _client;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onclient_idChanging(System.Nullable<int> value);
    partial void Onclient_idChanged();
    partial void Onordered_atChanging(System.Nullable<System.DateTime> value);
    partial void Onordered_atChanged();
    partial void OntotalChanging(System.Nullable<decimal> value);
    partial void OntotalChanged();
    partial void Onshipping_addressChanging(string value);
    partial void Onshipping_addressChanged();
    partial void Onbilling_addressChanging(string value);
    partial void Onbilling_addressChanged();
    #endregion
	
	public sellOrder()
	{
		this._items = new EntitySet<item>(new Action<item>(this.attach_items), new Action<item>(this.detach_items));
		this._client = default(EntityRef<client>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_id", DbType="Int")]
	public System.Nullable<int> client_id
	{
		get
		{
			return this._client_id;
		}
		set
		{
			if ((this._client_id != value))
			{
				if (this._client.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onclient_idChanging(value);
				this.SendPropertyChanging();
				this._client_id = value;
				this.SendPropertyChanged("client_id");
				this.Onclient_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ordered_at", DbType="DateTime")]
	public System.Nullable<System.DateTime> ordered_at
	{
		get
		{
			return this._ordered_at;
		}
		set
		{
			if ((this._ordered_at != value))
			{
				this.Onordered_atChanging(value);
				this.SendPropertyChanging();
				this._ordered_at = value;
				this.SendPropertyChanged("ordered_at");
				this.Onordered_atChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> total
	{
		get
		{
			return this._total;
		}
		set
		{
			if ((this._total != value))
			{
				this.OntotalChanging(value);
				this.SendPropertyChanging();
				this._total = value;
				this.SendPropertyChanged("total");
				this.OntotalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipping_address", DbType="VarChar(255)")]
	public string shipping_address
	{
		get
		{
			return this._shipping_address;
		}
		set
		{
			if ((this._shipping_address != value))
			{
				this.Onshipping_addressChanging(value);
				this.SendPropertyChanging();
				this._shipping_address = value;
				this.SendPropertyChanged("shipping_address");
				this.Onshipping_addressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billing_address", DbType="VarChar(255)")]
	public string billing_address
	{
		get
		{
			return this._billing_address;
		}
		set
		{
			if ((this._billing_address != value))
			{
				this.Onbilling_addressChanging(value);
				this.SendPropertyChanging();
				this._billing_address = value;
				this.SendPropertyChanged("billing_address");
				this.Onbilling_addressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sellOrder_item", Storage="_items", ThisKey="id", OtherKey="sellOrder_id")]
	public EntitySet<item> items
	{
		get
		{
			return this._items;
		}
		set
		{
			this._items.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_sellOrder", Storage="_client", ThisKey="client_id", OtherKey="id", IsForeignKey=true)]
	public client client
	{
		get
		{
			return this._client.Entity;
		}
		set
		{
			client previousValue = this._client.Entity;
			if (((previousValue != value) 
						|| (this._client.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._client.Entity = null;
					previousValue.sellOrders.Remove(this);
				}
				this._client.Entity = value;
				if ((value != null))
				{
					value.sellOrders.Add(this);
					this._client_id = value.id;
				}
				else
				{
					this._client_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("client");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_items(item entity)
	{
		this.SendPropertyChanging();
		entity.sellOrder = this;
	}
	
	private void detach_items(item entity)
	{
		this.SendPropertyChanging();
		entity.sellOrder = null;
	}
}
#pragma warning restore 1591
